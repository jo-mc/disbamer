[["index.html", "Disbamer explained. 1 Disbamer 1.1 Design main script disbamer.sh 1.2 Find Reference alignment length cigtoRefLen.awk 1.3 Obtain reference sequence getrefseq.awk 1.4 Display output viewread.awk", " Disbamer explained. Joe McC. 1 Disbamer 1.1 Design main script disbamer.sh Most commands are explained in detail in Techniques Section Was a read number supplied? if [[ $# -ne 1 ]]; then echo messages exit 2 fi $# : Number of arguments passed to bash script We looking for one input only! `-ne 1 : not equal to one Is samtools loaded command -v samtools &gt;/dev/null 2&gt;&amp;1 || { echo &gt;&amp;2 - Is samtools loaded?; exit 1; } Try samtools, output to null, and redirect error to stdout, if we get output then show message. Extract Read from SAM file. bamdata=$(samtools view sam.lnk | sed ${1}q;d) run samtools, use sed to get line requested, and put read in to var bamdata Get read data fields. read seqD &lt;&lt;&lt; $(echo $bamdata| awk {print $10}) # Repeat for flag region position sequence &amp; cigar  Use awk to get fields from bamdata. Bash read puts output into variable : seqD Check sequence field. Secondary alignments dont hold sequence if [ $seqD== \"*\"]; then echo No sequence data : secondary? exit 1 fi Sam data only has sequence in primary/supplementary mapped reads. Using CIGAR calculate length of Reference sequence required read seqlengthD &lt;&lt;&lt; $(awk -v cigA=$cigarD-f cigtoRefLen.awk) Use awk script to calculate. Use bash read to assign result. to variable, returns * if error Obtain reference matching sequence for read read seqrefD &lt;&lt;&lt; $(awk -v regA=$regionD-v posA=$positionD-v lenA=$seqlengthD-f getrefseq.awk ref.lnk) Send bash variables for region, position and length to the awk script; return sequence Display read alongside Reference with indels marked awk -v cigA=$cigarD-v seqA=$seqD-v refA=$seqrefD-f viewread.awk Send bash variables for cigar, read and reference sequences to the awk script for display 1.2 Find Reference alignment length cigtoRefLen.awk Using CIGAR calculate length of Reference sequence required Note: All code is in a BEGIN block, and only operates on passed variable (via v) 1.3 Obtain reference sequence getrefseq.awk Obtain reference matching sequence for read 1.4 Display output viewread.awk Display read alongside Reference with indels marked "],["techniques-bash-and-awk-explained.html", "2 Techniques - bash and awk explained 2.1 pipe detection 2.2 how many arguments passed into script? 2.3 Check if a command/program is avaiable 2.4 assign ouput of a command to a variable, reference an input argument 2.5 Run a command and put the output into a variable. 2.6 strings in bash bash variable data 2.7 misc", " 2 Techniques - bash and awk explained note: may not be optimal or best practice.. still in training.. 2.1 pipe detection Is output of script being piped? if [ -t 1 ] ; then nopipe_out=terminal; fi; nopipe_out will be set to terminal if the script output is not being sent to a pipe. This means the output will go to the terminal and I need to be aware of line wrapping wrapping. (handled in xviewread.awk) if flag -t = 1 then output is going to terminal: https://www.gnu.org/software/bash/manual/html_node/Bash-Conditional-Expressions.html :::::: 2.2 how many arguments passed into script? if [[ $# -ne 1 ]]; then echo &quot;message....&quot; exit 2 fi $# is number of arguments passed to the script. As we need the read number, one argument is requried. If this is not present a message will be displayed, and the script will exit. exit 2 is used with the 2 indicating an error occurred in running the script. https://www.gnu.org/software/bash/manual/html_node/Exit-Status.html All builtins return an exit status of 2 to indicate incorrect usage, generally invalid options or missing arguments. ( i guess this is not a built in, but it does indicate a missing argument) :::::: 2.3 Check if a command/program is avaiable command -v samtools &gt;/dev/null 2&gt;&amp;1 || { echo &gt;&amp;2 &quot;------ Is samtools loaded? error running samtools, exiting.&quot;; exit 1; } Is samtools (or some other program responding) command -v : The -v option causes a single word indicating the command or file name used to invoke command to be displayed, if samtools is loaded then the output is : []$ command -v samtools /apps/skl/software/SAMtools/1.8/bin/samtools and $?, the exit code is []$ echo $? 0 if samtools is not loaded, nothing is output: []$ command -v samtools []$ and $? the exit code is $ echo $? 1 ::::: 2.4 assign ouput of a command to a variable, reference an input argument bamdata=$(samtools view sam.lnk | sed &quot;${1}q;d&quot;) ${1} is the read number we are looking for (sequential numbered reads in bam file ) sed &quot;${1}q;d&quot; =&gt; sed 28q;d One of the fastest ways to get a requested line for text from a file or pipe. ::::: 2.5 Run a command and put the output into a variable. read -r readdataD &lt;&lt;&lt; &quot;$(echo &quot;$bamdata&quot; | awk &#39;{print $1}&#39;)&quot; read : Reads a single line from the standard input readdataD : is a bash variable the data will be read into &lt;&lt;&lt; redirect output into read command (bash builtin) $bamdata contains a line from a file, awk print $1 returns the first field in the line. -r option : Backslash does not act as an escape character. The backslash is considered to be part of the line. In particular, a backslash-newline pair may not be used as a line continuation. [n]&lt;&lt;&lt; word The word undergoes tilde expansion, parameter and variable expansion, command substitution, arithmetic expansion, and quote removal. Pathname expansion and word splitting are not performed. The result is supplied as a single string, with a newline appended, to the command on its standard input (or file descriptor n if n is specified). https://www.gnu.org/software/bash/manual/html_node/Redirections.html#Here-Strings though this should work also : readdataD=&quot;$(echo &quot;$bamdata&quot; | awk &#39;{print $1}&#39;)&quot; ::::: 2.6 strings in bash bash variable data length ciglen=&quot;${#cigarD}&quot; if cigarD=ABCDEFGHIJKLMN ciglen will be set to 14 substring: firstFive=&quot;${cigarD:0:5}&quot; lastFive-&quot;${cigarD:$(($ciglen-20)):20}&quot; firstFive is set to ABCDE lastFive is set to JKLMN 2.7 misc Calling awk from bash: awk -v cigA=&quot;$cigarD&quot; -f cigtoRefLen.awk -v will assign the bash variable cigarD to the awk variable cigA to be available in the awk script -f specify awk script file to run AWK: NR&gt;2{} tells awk to process the commands in curly braces only if the line number, NR, is greater than two. This has the effect of skipping over the header lines. "]]
